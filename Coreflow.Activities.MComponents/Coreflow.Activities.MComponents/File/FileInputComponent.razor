@using Microsoft.AspNetCore.Components.Forms
@using System.Linq.Expressions
@using System.Net.Http.Json

@inject IFileUploadService FileUploader

@Document?.FileName

@if (MaxAllowedFiles > 1)
{
	<InputFile OnChange="@LoadFiles" multiple />
}
else
{
	<InputFile OnChange="@LoadFiles" />
}

@code {



	protected bool isLoading;

	[Parameter]
	public int MaxAllowedFiles { get; set; } = 1;

	[Parameter]
	public string FileInputName { get; set; }

	[Parameter]
	public IDictionary<string, string> AdditionalHeaders { get; set; }

	[Parameter]
	public IDocument Document { get; set; }

	[Parameter]
	public EventCallback<IDocument> DocumentChanged { get; set; }

	[Parameter]
	public Expression<Func<IDocument>> DocumentExpression { get; set; }


	private async void LoadFiles(InputFileChangeEventArgs e)
	{
		if (e.FileCount <= 0) //should we set the Document to null?
			return;

		if (AdditionalHeaders == null)
			AdditionalHeaders = new Dictionary<string, string>();

		if (!AdditionalHeaders.ContainsKey(nameof(FileInputName)))
			AdditionalHeaders.Add(nameof(FileInputName), FileInputName);

		var newDocs = await FileUploader.UploadFiles(e.GetMultipleFiles(MaxAllowedFiles), AdditionalHeaders);

		Document = newDocs.FirstOrDefault();
		await DocumentChanged.InvokeAsync(Document);
	}

}

